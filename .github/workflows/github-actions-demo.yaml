name: GitHub Actions For Next.js testing 

on:
  push:
    branches:
      - dev

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 16.15.0
        uses: actions/setup-node@v3
        with:
          node-version: "16.15.0"
      - name: Cache node modules
          id: cache-npm
          uses: actions/cache@v3
          env:
            cache-name: cache-node-modules
          with:
            # npm cache files are stored in `~/.npm` on Linux/macOS
            path: ~/.npm
            key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
              ${{ runner.os }}-build-${{ env.cache-name }}-
              ${{ runner.os }}-build-
              ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: dependence install
        run: npm ci

      - name: Test
        run: npm run test:ci

  # docker-build-and-push:
  #   timeout-minutes: 10
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: "read"
  #     id-token: "write"
  #   env:
  #     VERSION: ${{ github.sha }}
  #     PROJECT_ID: wide-hulling-226815
  #     REGISTRY: asia-east1-docker.pkg.dev
  #     FOLDER_NAME: nextproj3
  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v3

  #     - name: Authenticate to Google Cloud
  #       id: auth
  #       uses: google-github-actions/auth@v0
  #       with:
  #         token_format: access_token
  #         workload_identity_provider: projects/910785627085/locations/global/workloadIdentityPools/github-pool/providers/dennnny-provider
  #         service_account: github@wide-hulling-226815.iam.gserviceaccount.com
  #         access_token_lifetime: 300s

  #     - name: Login to Artifact Registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: oauth2accesstoken
  #         password: ${{ steps.auth.outputs.access_token }}

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Tag Docker image and push to Google Artifact Registry
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: .
  #         file: ./Dockerfile
  #         push: true
  #         tags: ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/github/${{ env.FOLDER_NAME }}:lastet
